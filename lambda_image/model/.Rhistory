s_time <- Sys.time()
source("./UtilityFunctions.R")
source("./Inputs.R")
sourceCpp("./future_value_cpp.cpp")
source("./BenefitModel.R")
source("./WorkforceModel.R")
# get_wf_data()
wf_projection <- readRDS("./wf_data.rds")
source("./LiabilityModel.R")
source("./FundingModel.R")
m_time <- Sys.time()
det_SQ_assumption <-  memoised_get_funding_data(
curr_disc_rate = 0.0755,
new_disc_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_time <- Sys.time()
e_time - m_time
m_time - s_time
det_SQ_assumption <-  memoised_get_funding_data(
curr_disc_rate = 0.0755,
new_disc_rate = 0.0755,
cola = 0.039,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
library(ggplot2)
library(data.table)
library(openxlsx)
library(data.table)
library(Rcpp)
library(memoise)
s_time <- Sys.time()
source("./UtilityFunctions.R")
source("./Inputs.R")
sourceCpp("./future_value_cpp.cpp")
source("./BenefitModel.R")
source("./WorkforceModel.R")
# get_wf_data()
wf_projection <- readRDS("./wf_data.rds")
source("./LiabilityModel.R")
source("./FundingModel.R")
m_time <- Sys.time()
det_SQ_assumption <-  memoised_get_funding_data(
curr_disc_rate = 0.0755,
new_disc_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_time <- Sys.time()
m_time - s_time
e_time - m_time
m_time <- Sys.time()
det_SQ_assumption <-  memoised_get_funding_data(
curr_disc_rate = 0.0755,
new_disc_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_time <- Sys.time()
m_time <- Sys.time()
det_SQ_assumption <-  memoised_get_funding_data(
curr_disc_rate = 0.0755,
new_disc_rate = 0.0755,
cola = 0.039,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_time <- Sys.time()
e_time - m_time
base_benefit_data <- get_benefit_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6
)
source("./MasterModel.R")
base_benefit_data <- get_benefit_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6
)
base_benefit_data$nc_agg
base_liability_data <- get_liability_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6
)
View(base_liability_data)
det_SQ_assumption <-  get_funding_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
View(det_SQ_assumption)
s_fund <- Sys.time()
det_SQ_assumption <-  get_funding_data(
curr_discount_rate = 0.07,
new_discount_rate = 0.07,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_fund <- Sys.time()
e_fund - s_fund
s_fund <- Sys.time()
det_SQ_assumption <-  get_funding_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_fund <- Sys.time()
source("./MasterModel.R")
s_fund <- Sys.time()
det_SQ_assumption <-  get_funding_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
e_fund <- Sys.time()
View(det_SQ_assumption)
base_liability_data <- get_liability_data(
curr_discount_rate = 0.0755,
new_discount_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6
)
View(base_liability_data)
source("./MasterModel.R")
det_SQ_assumption <-  get_funding_data(
curr_dist_rate = 0.0755,
new_dist_rate = 0.0755,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
det_SQ_assumption$cum_total_hire_ER_contr_real
det_SQ_assumption$total_hire_ual_mva_real
det_SQ_assumption$total_hire_ER_all_in_cost_real
det_SQ_assumption$total_hire_ER_contr_real
det_SQ_assumption$total_hire_ER_contr_rate
source("./MasterModel.R")
base_benefit_data <- get_benefit_data()
base_liability_data <- get_liability_data()
base_funding_data <- get_funding_data()
View(base_funding_data)
View(base_liability_data)
base_benefit_data$nc_agg
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
source("./UtilityFunctions.R")
source("./Inputs.R")
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
source("./UtilityFunctions.R")
source("./Inputs.R")
sourceCpp("./future_value_cpp.cpp")
source("./BenefitModel.R")
source("./WorkforceModel.R")
# get_wf_data()
wf_projection <- readRDS("./wf_data.rds")
source("./LiabilityModel.R")
source("./FundingModel.R")
det_SQ_assumption <-  get_funding_data(
curr_dist_rate = 0.07,
new_dist_rate = 0.07,
cola = 0.03,
retire_refund_ratio = 0.6,
funding_policy = "StatusQuo",
analysis_type = "Deterministic",
roa_scenario = "Assumption"
)
View(det_SQ_assumption)
proj_length <- end_proj_year - start_proj_year + 1
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
source("/var/task/model//UtilityFunctions.R")
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source(UtilityFunctions.R)
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source("UtilityFunctions.R")
source("Inputs.R")
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source("UtilityFunctions.R")
source("Inputs.R")
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source("UtilityFunctions.R")
source("Inputs.R")
sourceCpp("future_value_cpp.cpp")
source("BenefitModel.R")
source("WorkforceModel.R")
wf_projection <- readRDS("wf_data.rds")
source("LiabilityModel.R")
source("FundingModel.R")
funding <- get_funding_data()
View(funding)
# Get start index
period <- end_proj_year - start_hist_year + 1
proj_length <- end_proj_year - start_proj_year + 1
proj_length
curr_dist_rate = curr_discount_rate_
new_dist_rate = new_discount_rate_
cola = cola_
retire_refund_ratio = retire_refund_ratio_
funding_policy = funding_policy_
analysis_type = analysis_type_
roa_scenario = roa_scenario_
# Get start index
period <- end_proj_year - start_hist_year + 1
proj_length <- end_proj_year - start_proj_year + 1
first_proj_yr_idx <- start_proj_year - start_hist_year + 1
critical_year_indx <- period - (end_proj_year - critical_year)
# Discount rate
curr_discount_rate[first_proj_yr_idx:period] <- rep(curr_dist_rate, proj_length)
# Create an empty matrix for the projection years
empty_matrix <- matrix(0, (end_proj_year - start_proj_year + 1), 1)
for(j in 1:length(colnames(historical_data))){
temp_matrix <- rbind(as.matrix(historical_data[,j]), empty_matrix)
assign(as.character(colnames(historical_data)[j]), temp_matrix)
}
# Discount rate
curr_discount_rate[first_proj_yr_idx:period] <- rep(curr_dist_rate, proj_length)
curr_discount_rate
new_discount_rate[first_proj_yr_idx:period] <- rep(new_dist_rate, proj_length)
new_discount_rate
period
proj_length
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
s_time <- Sys.time()
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source("UtilityFunctions.R")
source("Inputs.R")
sourceCpp("future_value_cpp.cpp")
source("BenefitModel.R")
source("WorkforceModel.R")
wf_projection <- readRDS("wf_data.rds")
source("LiabilityModel.R")
source("FundingModel.R")
funding <- get_funding_data()
View(funding)
rep(0.5, 30)
rep(,30)
rep(NULL, 30)
rep('0.1', 30)
s_time <- Sys.time()
rm(list = ls())
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source("UtilityFunctions.R")
source("Inputs.R")
sourceCpp("future_value_cpp.cpp")
source("BenefitModel.R")
source("WorkforceModel.R")
wf_projection <- readRDS("wf_data.rds")
source("LiabilityModel.R")
source("FundingModel.R")
funding <- get_funding_data()
e_time <- Sys.time()
e_time - s_time
rm(list = ls())
s_time <- Sys.time()
library("readxl")
library(dplyr)
library(tidyr)
library(zoo)
# library(ggplot2)
library(data.table)
library(openxlsx)
library(Rcpp)
# library(memoise)
# source("/var/task/model//UtilityFunctions.R")
#
# source("/var/task/model/Inputs.R")
#
# sourceCpp("/var/task/model/future_value_cpp.cpp")
#
# source("/var/task/model/BenefitModel.R")
#
# source("/var/task/model/WorkforceModel.R")
# # get_wf_data()
#
#
# wf_projection <- readRDS("/var/task/model/wf_data.rds")
# source("/var/task/model/LiabilityModel.R")
#
# source("/var/task/model/FundingModel.R")
source("UtilityFunctions.R")
source("Inputs.R")
sourceCpp("future_value_cpp.cpp")
source("BenefitModel.R")
source("WorkforceModel.R")
wf_projection <- readRDS("wf_data.rds")
source("LiabilityModel.R")
source("FundingModel.R")
funding <- get_funding_data()
e_time <- Sys.time()
e_time - s_time
